# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           muniversal 1.0
PortGroup           compiler_blacklist_versions 1.0

# The developer does not accept macOS-specific bug reports, but does
# accept pull requests.

name                mkvtoolnix
categories          multimedia
platforms           darwin
maintainers         {ryandesign @ryandesign} openmaintainer
license             GPL-2+ LGPL-2.1+

description         Matroska media files manipulation tools.
long_description    mkvtoolnix will evolve to a set of tools to create, \
                    alter and inspect Matroska files under Linux and other \
                    Unices, just what the OGMtools do for the OGM format.

homepage            https://mkvtoolnix.download
master_sites        ${homepage}/sources/
use_xz              yes

livecheck.type      none

version         55.0.0
revision        0
checksums       rmd160  7f2a3940e46674f97073eccd3c51d02720b0ec70 \
                sha256  6061639bda18adbf5c49264d5498fd2abab420113ba680d0eb441a9aa02afba6 \
                size    7581572

livecheck.type  regex
livecheck.url   [lindex ${master_sites} 0]
livecheck.regex ${name}-(\[0-9.\]+)${extract.suffix}

if {${os.platform} eq "darwin" && ${os.major} < 19} {
    # requires a newer libc++ than the system can provide
    depends_lib-append        port:macports-libcxx
#    configure.cppflags-append -D_LIBCPP_DISABLE_AVAILABILITY
    configure.cxxflags-append  -nostdinc++ -I${prefix}/include/libcxx/v1
    configure.ldflags-append  -L${prefix}/lib/libcxx
    compiler.blacklist-append {clang < 1100} {macports-clang-3.[3-9]} {macports-clang-[5-8].0}
}

set version_ruby    2.7
set version_ruby_mp [join [split $version_ruby "."] ""]

depends_build-append \
                    port:ruby${version_ruby_mp} \
                    port:docbook-xsl-nons \
                    port:libxslt \
                    port:po4a

depends_lib-append  port:boost \
                    port:bzip2 \
                    port:expat \
                    port:flac \
                    port:gettext \
                    port:libebml \
                    port:libmagic \
                    port:libmatroska \
                    port:libogg \
                    port:libvorbis \
                    port:lzo2 \
                    port:pcre \
                    port:zlib \
                    port:pugixml \
                    port:cmark

depends_run-append  port:ruby${version_ruby_mp}

post-patch {
    fs-traverse f ${worksrcpath} {
        set t [file tail ${f}]
        set e [file extension ${f}]
        if {${t} eq "Rakefile" || ${e} eq ".rb"} {
            reinplace -q -E "s|^#!/usr/bin/(env )?ruby|#!${prefix}/bin/ruby${version_ruby}|g" ${f}
        }
    }
}

compiler.cxx_standard 2017

set cxx_stdlibflags {}
if {[string match *clang* ${configure.cxx}]} {
    set cxx_stdlibflags -stdlib=${configure.cxx_stdlib}
}

build.cmd           rake${version_ruby}
build.target        default
# disable silent rules
build.args-append   V=1

configure.args      --mandir=${prefix}/share/man \
                    --with-boost=${prefix} \
                    --with-extra-libs=${prefix}/lib \
                    --with-extra-includes=${prefix}/include \
                    --with-xsltproc=${prefix}/bin/xsltproc \
                    --with-docbook-xsl-root=${prefix}/share/xsl/docbook-xsl-nons \
                    --with-po4a=${prefix}/bin/po4a \
                    --with-po4a-translate=${prefix}/bin/po4a-translate \
                    --disable-qt \
                    --disable-update-check

configure.ldflags-append ${cxx_stdlibflags}

test.run            yes
test.cmd            rake
test.target         tests:unit

variant qtgui description {Build with the qt5 GUI} {
    PortGroup       app 1.0
    PortGroup       qt5 1.0

    app.name        MKVToolNix
    app.executable  mkvtoolnix-gui
    app.icon        ${worksrcpath}/share/icons/256x256/mkvtoolnix-gui.png

    depends_build-append port:makeicns
    qt5.depends_component qtmultimedia
    configure.args-delete --disable-qt
    configure.args-append \
                    --enable-qt \
                    --with-qmake=${qt_dir}/bin/qmake \
                    --with-moc=${qt_dir}/bin/moc \
                    --with-uic=${qt_dir}/bin/uic \
                    --with-rcc=${qt_dir}/bin/rcc
}

if {${os.platform} ne "darwin" || ${os.major} > 13} {
    default_variants +qtgui
} elseif {[variant_isset qtgui]} {
    known_fail      yes
    pre-fetch {
        ui_error "The qtgui variant requires Qt 5.9.0 or later, available on OS X 10.10 and later"
        return -code error "incompatible OS X version"
    }
}
