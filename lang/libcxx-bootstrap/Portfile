# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
PortSystem              1.0

name                    libcxx-bootstrap
version                 5.0.1
revision                0
categories              lang
platforms               darwin
license                 MIT NCSA
maintainers             {kencu @kencu}
description             ${name} is a version of libcxx that exists to bootstrap to the emulated_tls version
long_description        ${description}
homepage                https://libcxx.llvm.org/
master_sites            https://releases.llvm.org/${version}/
dist_subdir             llvm

if {${os.platform} eq "darwin" && ${os.major} < 11 && ${configure.cxx_stdlib} eq "libc++"} {
    # Bootstrap problem, libcxx is indirectly used by the normal xz port.
    depends_extract     port:xz-bootstrap
    extract.suffix      .tar.xz
    extract.cmd         ${prefix}/libexec/libcxx-bootstrap/bin/xz
    # And having the stdlib set to libc++ on 10.6 causes a
    # macports-clang compiler to be selected.
    configure.cxx_stdlib
} else {
    use_xz              yes
}

set libcxxabi_distname  libcxxabi-${version}.src
set libcxx_distname     libcxx-${version}.src

distfiles               ${libcxxabi_distname}${extract.suffix} \
                        ${libcxx_distname}${extract.suffix}

checksums               ${libcxxabi_distname}${extract.suffix} \
                        rmd160  93b74a0644c1afd565938fba5e21b200b206c72a \
                        sha256  5a25152cb7f21e3c223ad36a1022faeb8a5ac27c9e75936a5ae2d3ac48f6e854 \
                        size    521504 \
                        ${libcxx_distname}${extract.suffix} \
                        rmd160  1e5a22e62515382488f232039e31f0b12c08ca4f \
                        sha256  fa8f99dd2bde109daa3276d529851a3bce5718d46ce1c5d0806f46caa3e57c00 \
                        size    1527852

set roots_path              ${prefix}/var/system_roots/
set root_name               ${name}-${version}-${revision}
set libcxxabi_worksrcpath   [file join ${workpath} ${libcxxabi_distname}]
set libcxx_worksrcpath      [file join ${workpath} ${libcxx_distname}]

if {${os.platform} eq "darwin" && ${os.major} < 11} {
    variant universal {}
    default_variants +universal

    compiler.whitelist macports-clang-3.4
    supported_archs i386 x86_64

    post-extract {
        delete ${libcxxabi_worksrcpath}/src/cxa_noexception.cpp
        delete ${libcxxabi_worksrcpath}/src/cxa_thread_atexit.cpp
    }

    patch.dir ${workpath}
    patchfiles patch-libcxxbootstrap-allpatches.diff

    post-patch {
        system "chmod 755 ${libcxx_worksrcpath}/lib/buildit"

        if {${os.major} < 9} {
            foreach header [glob ${workpath}/libcxx-${version}.src/include/*] {
                reinplace "s|Availability.h|AvailabilityMacros.h|g" ${header}
            }
        }
    }

    pre-build {
        file mkdir ${workpath}/build
        file copy ${filespath}/Makefile ${workpath}/build
    }

    build.dir ${workpath}/build
    use_configure no

    build.env-append \
        CC=${configure.cc} \
        CXX=${configure.cxx} \
        RC_XBS=1 \
        RC_ProjectSourceVersion=${version} \
        "RC_CFLAGS=[get_canonical_archflags] -I${libcxxabi_worksrcpath}/include -I${libcxx_worksrcpath}/include ${configure.optflags}" \
        TRIPLE=-apple-darwin${os.major}

    build.args-append \
        LIBCXXABI_PATH=${libcxxabi_worksrcpath} \
        LIBCXX_PATH=${libcxx_worksrcpath} \
        LIBCXXABI_DYLIB_PATH=${build.dir}/libc++abi.dylib

    destroot {
        xinstall -m 755 -d   ${destroot}${roots_path}/${root_name}/usr/lib
        xinstall -m 755      ${libcxxabi_worksrcpath}/lib/libc++abi.dylib ${destroot}${roots_path}/${root_name}/usr/lib
        xinstall -m 755      ${libcxx_worksrcpath}/lib/libc++.1.dylib ${destroot}${roots_path}/${root_name}/usr/lib
        ln -s                libc++.1.dylib ${destroot}${roots_path}/${root_name}/usr/lib/libc++.dylib

        xinstall -m 755 -d   ${destroot}${roots_path}/${root_name}/usr/include
        xinstall -m 755      ${libcxxabi_worksrcpath}/include/__cxxabi_config.h ${destroot}${roots_path}/${root_name}/usr/include
        xinstall -m 755      ${libcxxabi_worksrcpath}/include/cxxabi.h ${destroot}${roots_path}/${root_name}/usr/include
        system -W            ${destroot}${roots_path}/${root_name} "tar czf ../${root_name}.tgz ."
        delete               ${destroot}${roots_path}/${root_name}
    }

    post-activate {
        # don't replace any existing libc++ installation with this bootstrap version
        if {![file exists /usr/lib/libc++.dylib]} {
            set dirs /
            if {${os.subplatform} eq "macosx"} {
                lappend dirs ${developer_dir}/SDKs/MacOSX[join [lrange [split ${macosx_version} .] 0 1] .].sdk
            }
            foreach d ${dirs} {
                system -W ${d} "tar xzf ${roots_path}/${root_name}.tgz"
            }
        }
    }

} else {
    supported_archs noarch
    distfiles
    build {}
    known_fail      yes
    pre-fetch {
        ui_error "${name} is not supported on Lion or later."
        error "unsupported platform"
    }
}

livecheck.type none
